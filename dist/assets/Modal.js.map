{"version":3,"file":"Modal.js","sources":["../../src/components/Modal/Modal.vue"],"sourcesContent":["<template>\n  <Teleport to=\"body\">\n    <div\n      ref=\"modal\"\n      :class=\"{\n        'flex bg-transparent-black-700 fixed inset-0 z-50 justify-center items-center':\n          isOpen,\n        hidden: !isOpen,\n      }\"\n      @click.self=\"$emit('close')\"\n    >\n      <div\n        class=\"bg-neutral-50 border absolute inset-4 md:inset-16 rounded-2xl flex flex-col overflow-hidden h-fit max-h-[90%] max-w-fit m-auto\"\n        v-bind=\"$attrs\"\n      >\n        <XButton\n          class=\"absolute right-4 top-4 md:top-8 md:right-8\"\n          @click=\"$emit('close')\"\n        />\n        <header\n          class=\"flex justify-between items-start p-4 md:p-8 border-b bg-neutral-100\"\n        >\n          <h2 class=\"flex-1 font-bold text-2xl mr-12\">{{ label }}</h2>\n        </header>\n        <div class=\"flex-1 overflow-auto p-4 md:p-8\">\n          <slot />\n        </div>\n      </div>\n    </div>\n  </Teleport>\n</template>\n<script setup lang=\"ts\">\nimport { onMounted, onUnmounted, ref } from \"vue\";\nimport XButton from \"../XButton/XButton.vue\";\n\nconst props = withDefaults(\n  defineProps<{\n    label?: string | null;\n    isOpen: boolean;\n  }>(),\n  {\n    label: \"\",\n    isOpen: false,\n  }\n);\n\nconst emit = defineEmits<{\n  (eventName: \"close\"): void;\n}>();\n\nconst modal = ref<HTMLDivElement>();\n\nfunction closeIfEsc(event) {\n  if (props.isOpen && event.keyCode === 27) {\n    emit(\"close\");\n  }\n}\n\nonMounted(() => {\n  document.addEventListener(\"keydown\", closeIfEsc);\n});\n\nonUnmounted(() => document.removeEventListener(\"keydown\", closeIfEsc));\n</script>\n<style scoped>\n.modal {\n  display: none;\n}\n.modal.modal--is-open {\n  display: flex;\n  background: rgba(0, 0, 0, 0.66);\n  position: fixed;\n  inset: 0;\n  z-index: 50;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal__contents {\n  background: #f3f3f3;\n  border: 1px solid transparent;\n  position: absolute;\n  max-height: 90vh;\n  width: 90vw;\n  max-width: 60rem;\n  overflow: auto;\n  border-radius: 1rem;\n}\n::-webkit-scrollbar {\n  width: 0.5rem;\n}\n\n/* Track */\n::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 33%);\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #aaa;\n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #555;\n}\n</style>\n"],"names":["modal","ref","closeIfEsc","event","props","emit","onMounted","onUnmounted"],"mappings":"k2BAkDMA,EAAQC,IAEd,SAASC,EAAWC,EAAO,CACrBC,EAAM,QAAUD,EAAM,UAAY,IACpCE,EAAK,OAAO,CAEhB,CAEA,OAAAC,EAAU,IAAM,CACL,SAAA,iBAAiB,UAAWJ,CAAU,CAAA,CAChD,EAEDK,EAAY,IAAM,SAAS,oBAAoB,UAAWL,CAAU,CAAC"}