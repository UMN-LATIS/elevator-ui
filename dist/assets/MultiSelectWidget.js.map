{"version":3,"file":"MultiSelectWidget.js","sources":["../../src/components/Widget/MultiSelectWidget/MultiSelectWidget.ts","../../src/components/Widget/MultiSelectWidget/MultiSelectItem.vue"],"sourcesContent":["export const recursiveSort = (inputObject: object, skip: boolean): string[] => {\n  let outputArray: string[] = [];\n  for (const key in inputObject) {\n    if (!skip) {\n      outputArray.push(key);\n    }\n    if (typeof inputObject[key] === \"object\") {\n      outputArray = outputArray.concat(recursiveSort(inputObject[key], !skip));\n    }\n  }\n  return outputArray.flat();\n};\n\nexport const uniqueValues = (inputArray: string[]) => {\n  return inputArray.filter((value, index, self) => {\n    return self.indexOf(value) === index;\n  });\n};\n","<template>\n  <ul>\n    <template v-for=\"category in organizedSelectCategories\" :key=\"category\">\n      <li v-if=\"content.fieldContents[category]\">\n        <ClickToSearchLink\n          :widget=\"widget\"\n          :linkText=\"contentsUpToCategory(category)\"\n          >{{ content.fieldContents[category] }}\n        </ClickToSearchLink>\n      </li>\n    </template>\n  </ul>\n</template>\n\n<script setup lang=\"ts\">\nimport { recursiveSort, uniqueValues } from \"./MultiSelectWidget\";\nimport { computed } from \"vue\";\nimport { MultiSelectWidgetContent, MultiSelectWidgetProps } from \"@/types\";\nimport ClickToSearchLink from \"@/components/ClickToSearchLink/ClickToSearchLink.vue\";\n\ninterface Props {\n  widget: MultiSelectWidgetProps;\n  content: MultiSelectWidgetContent;\n}\n\nconst props = defineProps<Props>();\n\nconst organizedSelectCategories = computed(() => {\n  return uniqueValues(recursiveSort(props.widget.fieldData, false));\n});\n\nconst contentsUpToCategory = (targetCategory) => {\n  const returnValue: string[] = [];\n  for (const category of organizedSelectCategories.value) {\n    returnValue.push(props.content.fieldContents[category]);\n    if (category == targetCategory) {\n      return returnValue.join(\" : \");\n    }\n  }\n  return returnValue.join(\" : \");\n};\n</script>\n\n<style scoped>\nul {\n  display: inline;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\nul li {\n  display: inline;\n}\n\nul li + li:before {\n  content: \" : \";\n}\n</style>\n"],"names":["recursiveSort","inputObject","skip","outputArray","key","uniqueValues","inputArray","value","index","self","organizedSelectCategories","computed","props","contentsUpToCategory","targetCategory","returnValue","category"],"mappings":"+SAAa,MAAAA,EAAgB,CAACC,EAAqBC,IAA4B,CAC7E,IAAIC,EAAwB,CAAA,EAC5B,UAAWC,KAAOH,EACXC,GACHC,EAAY,KAAKC,CAAG,EAElB,OAAOH,EAAYG,IAAS,WAC9BD,EAAcA,EAAY,OAAOH,EAAcC,EAAYG,GAAM,CAACF,CAAI,CAAC,GAG3E,OAAOC,EAAY,MACrB,EAEaE,EAAgBC,GACpBA,EAAW,OAAO,CAACC,EAAOC,EAAOC,IAC/BA,EAAK,QAAQF,CAAK,IAAMC,CAChC,8FCWGE,EAA4BC,EAAS,IAClCN,EAAaL,EAAcY,EAAM,OAAO,UAAW,EAAK,CAAC,CACjE,EAEKC,EAAwBC,GAAmB,CAC/C,MAAMC,EAAwB,CAAA,EACnB,UAAAC,KAAYN,EAA0B,MAE/C,GADAK,EAAY,KAAKH,EAAM,QAAQ,cAAcI,EAAS,EAClDA,GAAYF,EACP,OAAAC,EAAY,KAAK,KAAK,EAG1B,OAAAA,EAAY,KAAK,KAAK,CAAA"}