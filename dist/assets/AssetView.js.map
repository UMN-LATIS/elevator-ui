{"version":3,"mappings":"+pHAcUA,QAbR,8UCkFF,MAAMC,EAAMC,EAAqB,IAAMC,aAAO,YAA2B,8MACnEC,EAAYF,EAChB,UAAM,OAAO,kMAGTG,EAAiBC,EAAI,EAAK,EAC1BC,EAAeD,EAAqC,MAAS,EAC7DE,EAAsBC,EAAS,IAAMF,EAAa,QAAU,MAAS,EAErEG,EAAaC,IAEnB,eAAeC,GAAwB,CACtBP,QAAQ,CAACA,EAAe,MACvCE,EAAa,MAAQ,OACrBA,EAAa,MAAQ,MAAMM,EAAI,gBAAgBH,EAAW,kBAAkB,CAC9E,8gDClEA,MAAMA,EAAaC,IACbG,EAASR,EAAI,EAAK,EAClBS,EAAmBT,EACvB,QAEIU,EAA0BP,EAC9B,IAAMM,EAAiB,QAAU,QAG7BE,EAA4BC,GAAa,CACvC,QAAQA,EAAS,MAAM,GAAG,EACzB,SAAMC,EAAM,OAAS,IAG9B,eAAeC,GAA0B,CACvCN,EAAO,MAAQ,GACfC,EAAiB,MAAQ,OACRA,QAAQ,MAAMF,EAAI,oBACjCH,EAAW,mBACXA,EAAW,cAEf,+5CCtBM,QAAWW,IAAa,OAAO,EAE/B,CAAE,OAAM,QAAO,EAAIC,GAAa,CACpC,OAAQC,EACR,aAAc,IACf,4ZCND,MAAMb,EAAaC,IACba,EAAyBC,GAAgBA,EAAI,QAAQ,OAAQ,GAAG,EAAE,OAElEX,EAASR,EAAI,EAAK,EAClBoB,EAAYjB,EAChB,IACE,GAAGkB,EAAO,KAAK,sBAAsBjB,EAAW,gCAG9CkB,EAAanB,EAAS,IACnBe,EAAsB;AAAA,0CACWE,EAAU,kDAAkD,CACrG,+iCC+BKG,EAAWpB,EAAS,IACxBqB,EAAM,SAAWC,EAAYD,EAAM,QAAQ,EAAI,uqDCzB3CE,EAAQvB,EAAS,IACjB,MAAM,QAAQqB,EAAM,YAAY,KAAK,EAChCA,EAAM,YAAY,MAAM,KAAK,GAAG,EAGrCA,EAAM,YAAY,OAASA,EAAM,YAAY,MAAM,OAAS,EACvDA,EAAM,YAAY,MAGpB,YACR,EAEKG,EAAkBxB,EAAS,IAAM,CAC/B,MAAE,kBAAiB,EAAIqB,EAAM,YAC5B,SAAmBI,GAAYC,CAAgB,EAAI,KAC3D,yrCC5DM,SAASC,EAAgBC,EAAgC,CACxD,QAAU/B,EAAyB,EAAE,EAE3C,UACE+B,EACA,SAAY,CACVC,EAAQ,MAAQ,MAAMzB,EAAI,gBAAgBwB,EAAW,KAAK,CAC5D,EACA,CAAE,UAAW,EAAK,GAGb,CAAE,SAAQ,CACnB,mQC4CMA,EAAa5B,EAAS,IAAMqB,EAAM,OAAO,EACzC,CAAE,SAAUS,GAASF,CAAU,EAE/B,CAAE,QAASG,CAAkB,EAAIJ,EAAgBC,CAAU,EAE3DI,EAAahC,EAAS,IAC1BiC,EAAM,MAAQC,GAAcD,EAAM,KAAK,EAAI,swBCDvCE,EAAqBtC,EAAI,EAAI,EAC7BuC,EAAsBvC,EAAI,EAAK,EAC/BI,EAAaC,IAEb0B,EAAa5B,EAAS,IAAMqB,EAAM,OAAO,EACzC,CAAE,QAASU,CAAkB,EAAIJ,EAAgBC,CAAU,EAE3DS,EAAqBC,GAAc,oBAAoB","names":["_hoisted_3","Map","defineAsyncComponent","__vitePreload","MapMarker","isFileInfoOpen","ref","fileMetaData","isFileMetaDataReady","computed","assetStore","useAssetStore","handleInfoButtonClick","api","isOpen","downloadFileInfo","isDownloadFileInfoReady","getExtensionFromFilename","filename","parts","handleDownloadFileClick","toRef","useClipboard","valueRef","removeExtraWhitespace","str","linkValue","config","embedValue","assetUrl","props","getAssetUrl","title","thumbnailImgSrc","getThumbURL","primaryHandlerId","useMoreLikeThis","assetIdRef","matches","useAsset","moreLikeThisItems","assetTitle","asset","getAssetTitle","isAssetDetailsOpen","isObjectDetailsOpen","permitDrawerToggle","useMediaQuery"],"sources":["../../src/components/Skeleton/Skeleton.vue","../../src/components/ActiveFileViewToolbar/MoreFileInfoButton.vue","../../src/components/ActiveFileViewToolbar/DownloadFileButton.vue","../../src/components/CopyableTextArea/CopyableTextArea.vue","../../src/components/ActiveFileViewToolbar/ShareButton.vue","../../src/components/ObjectDetailsDrawer/ObjectDetailsDrawer.vue","../../src/components/SearchResultCard/SearchResultCard.vue","../../src/helpers/useMoreLikeThis.ts","../../src/components/AssetDetailsDrawer/AssetDetailsDrawer.vue","../../src/pages/AssetView.vue"],"sourcesContent":["<template>\n  <div class=\"rounded-md max-w-sm w-full py-4\">\n    <div class=\"animate-pulse flex space-x-4\">\n      <div class=\"flex-1 space-y-6 py-1\">\n        <div class=\"h-4 bg-neutral-300 rounded w-1/2\"></div>\n        <div class=\"h-2 bg-neutral-300 rounded\"></div>\n        <div class=\"space-y-3\">\n          <div class=\"grid grid-cols-3 gap-4\">\n            <div class=\"h-2 bg-neutral-300 rounded col-span-2\"></div>\n            <div class=\"h-2 bg-neutral-300 rounded col-span-1\"></div>\n          </div>\n          <div class=\"h-2 bg-neutral-50 rounded\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script setup lang=\"ts\"></script>\n<style scoped></style>\n","<template>\n  <ActiveFileViewButton @click=\"handleInfoButtonClick\">\n    info\n    <Modal\n      label=\"File Info\"\n      :isOpen=\"isFileInfoOpen\"\n      class=\"max-w-4xl m-auto\"\n      @close=\"isFileInfoOpen = false\"\n    >\n      <div v-if=\"!isFileMetaDataReady\">\n        <Skeleton v-for=\"index in 10\" :key=\"index\" />\n      </div>\n\n      <div v-if=\"isFileMetaDataReady\">\n        <span v-if=\"!fileMetaData\">No meta data found.</span>\n\n        <section v-if=\"fileMetaData\" class=\"flex flex-col gap-6\">\n          <Tuple label=\"File Type\">\n            {{ fileMetaData.exif.File.FileType }}\n          </Tuple>\n          <Tuple label=\"Original Name\">\n            {{ fileMetaData.sourcefile }}\n          </Tuple>\n          <Tuple label=\"File Size\">\n            {{ fileMetaData.exif.File.FileSize }}\n          </Tuple>\n          <Tuple label=\"Image Size\">\n            {{ fileMetaData.width }}x{{ fileMetaData.height }}\n          </Tuple>\n          <Tuple v-if=\"fileMetaData.coordinates\" label=\"Location\">\n            <div class=\"bg-neutral-200 p-4 rounded-xl\">\n              <Map\n                :center=\"{\n                  lng: fileMetaData.coordinates[0],\n                  lat: fileMetaData.coordinates[1],\n                }\"\n                :zoom=\"10\"\n                mapStyle=\"streets\"\n                :apiKey=\"config.arcgis.apiKey\"\n                class=\"\"\n              >\n                <MapMarker\n                  :lng=\"fileMetaData.coordinates[0]\"\n                  :lat=\"fileMetaData.coordinates[1]\"\n                />\n              </Map>\n            </div>\n          </Tuple>\n        </section>\n        <section v-if=\"fileMetaData?.exif\">\n          <h2 class=\"text-xl font-bold mt-6 border-t pt-6\">EXIF Details</h2>\n          <Accordion\n            v-for=\"(exifSectionProps, exifSectionLabel) in fileMetaData.exif\"\n            :key=\"exifSectionLabel\"\n            :label=\"exifSectionLabel\"\n            class=\"border mt-6\"\n          >\n            <Tuple\n              v-for=\"(value, key) in exifSectionProps\"\n              :key=\"key\"\n              :label=\"key\"\n            >\n              {{ value }}\n            </Tuple>\n          </Accordion>\n        </section>\n      </div>\n    </Modal>\n  </ActiveFileViewButton>\n</template>\n<script setup lang=\"ts\">\nimport { ref, defineAsyncComponent } from \"vue\";\nimport ActiveFileViewButton from \"./ActiveFileViewButton.vue\";\nimport Modal from \"../Modal/Modal.vue\";\nimport { FileMetaData } from \"@/types/FileMetaDataTypes\";\nimport api from \"@/helpers/api\";\nimport { useAssetStore } from \"@/stores/assetStore\";\nimport Skeleton from \"../Skeleton/Skeleton.vue\";\nimport { computed } from \"vue\";\nimport Tuple from \"../Tuple/Tuple.vue\";\nimport Accordion from \"../Accordion/Accordion.vue\";\nimport config from \"@/config\";\n\nconst Map = defineAsyncComponent(() => import(\"@/components/Map/Map.vue\"));\nconst MapMarker = defineAsyncComponent(\n  () => import(\"@/components/MapMarker/MapMarker.vue\")\n);\n\nconst isFileInfoOpen = ref(false);\nconst fileMetaData = ref<FileMetaData | null | undefined>(undefined);\nconst isFileMetaDataReady = computed(() => fileMetaData.value !== undefined);\n\nconst assetStore = useAssetStore();\n\nasync function handleInfoButtonClick() {\n  isFileInfoOpen.value = !isFileInfoOpen.value;\n  fileMetaData.value = undefined;\n  fileMetaData.value = await api.getFileMetaData(assetStore.activeFileObjectId);\n}\n</script>\n<style scoped></style>\n","<template>\n  <ActiveFileViewButton @click=\"handleDownloadFileClick\">\n    download\n  </ActiveFileViewButton>\n  <Modal label=\"File Downloads\" :isOpen=\"isOpen\" @close=\"isOpen = false\">\n    <div v-if=\"isDownloadFileInfoReady\">\n      <span v-if=\"!downloadFileInfo\">No Downloads available</span>\n      <ul v-if=\"downloadFileInfo\">\n        <li v-if=\"downloadFileInfo.screen?.ready\">\n          <a\n            :href=\"`${config.base.url}/fileManager/getDerivativeById/${assetStore.activeFileObjectId}/screen`\"\n          >\n            Download Derivative ({{\n              getExtensionFromFilename(\n                downloadFileInfo.screen.originalFilename\n              )\n            }})\n          </a>\n        </li>\n      </ul>\n    </div>\n  </Modal>\n</template>\n<script setup lang=\"ts\">\nimport { ref, computed } from \"vue\";\nimport ActiveFileViewButton from \"./ActiveFileViewButton.vue\";\nimport { useAssetStore } from \"@/stores/assetStore\";\nimport { FileDownloadResponse } from \"@/types/FileDownloadTypes\";\nimport api from \"@/helpers/api\";\nimport config from \"@/config\";\nimport Modal from \"../Modal/Modal.vue\";\n\nconst assetStore = useAssetStore();\nconst isOpen = ref(false);\nconst downloadFileInfo = ref<FileDownloadResponse | null | undefined>(\n  undefined\n);\nconst isDownloadFileInfoReady = computed(\n  () => downloadFileInfo.value !== undefined\n);\n\nconst getExtensionFromFilename = (filename) => {\n  const parts = filename.split(\".\");\n  return parts[parts.length - 1]; // last extension\n};\n\nasync function handleDownloadFileClick() {\n  isOpen.value = true;\n  downloadFileInfo.value = undefined; // undef means we're fetching\n  downloadFileInfo.value = await api.getFileDownloadInfo(\n    assetStore.activeFileObjectId,\n    assetStore.activeAssetId\n  );\n}\n</script>\n<style scoped></style>\n","<template>\n  <TextArea :label=\"label\" :value=\"value\" :placeholder=\"placeholder\">\n    <template #corner>\n      <Button\n        :icon=\"copied ? 'check' : 'content_copy'\"\n        variant=\"tertiary\"\n        @click=\"copy()\"\n      >\n        <!-- eslint-disable-next-line vue/no-textarea-mustache-->\n        {{ copied ? \"Copied\" : \"Copy\" }}\n      </Button>\n    </template>\n  </TextArea>\n</template>\n<script setup lang=\"ts\">\nimport { toRef } from \"vue\";\nimport { useClipboard } from \"@vueuse/core\";\nimport TextArea from \"../TextArea/TextArea.vue\";\nimport Button from \"../Button/Button.vue\";\n\nconst props = withDefaults(\n  defineProps<{\n    label: string;\n    value: string;\n    placeholder?: string;\n  }>(),\n  {\n    placeholder: \"\",\n  }\n);\n\nconst valueRef = toRef(props, \"value\");\n\nconst { copy, copied } = useClipboard({\n  source: valueRef,\n  copiedDuring: 3000,\n});\n</script>\n<style scoped></style>\n","<template>\n  <ActiveFileViewButton @click=\"isOpen = !isOpen\">share</ActiveFileViewButton>\n  <Modal\n    label=\"Share\"\n    :isOpen=\"isOpen\"\n    class=\"max-w-xl mx-auto\"\n    @close=\"isOpen = false\"\n  >\n    <div class=\"flex flex-col gap-4\">\n      <CopyableTextArea label=\"Embed\" :value=\"embedValue\" />\n      <CopyableTextArea label=\"Link\" :value=\"linkValue\" />\n      <Button\n        icon=\"open_in_new\"\n        label=\"Open in New Window\"\n        :href=\"linkValue\"\n        target=\"_blank\"\n        >Open Viewer in New Window</Button\n      >\n    </div>\n  </Modal>\n</template>\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\";\nimport ActiveFileViewButton from \"./ActiveFileViewButton.vue\";\nimport { useAssetStore } from \"@/stores/assetStore\";\nimport config from \"@/config\";\nimport Modal from \"../Modal/Modal.vue\";\nimport CopyableTextArea from \"../CopyableTextArea/CopyableTextArea.vue\";\nimport Button from \"../Button/Button.vue\";\n\nconst assetStore = useAssetStore();\nconst removeExtraWhitespace = (str: string) => str.replace(/\\s+/g, \" \").trim();\n\nconst isOpen = ref(false);\nconst linkValue = computed(\n  () =>\n    `${config.base.url}/asset/getEmbed/${assetStore.activeFileObjectId}/null/true`\n);\n\nconst embedValue = computed(() => {\n  return removeExtraWhitespace(`\n  <iframe width=\"560\" height=\"480\" src=\"${linkValue.value}\" frameborder=\"0\" allowfullscreen></iframe>`);\n});\n</script>\n<style scoped></style>\n","<template>\n  <div class=\"object-details\">\n    <div\n      v-if=\"!objectId\"\n      class=\"bg-neutral-900 text-neutral-300 h-full flex justify-end\"\n    >\n      <ActiveFileViewToolbar />\n    </div>\n    <Drawer\n      v-else\n      label=\"Details\"\n      variant=\"secondary\"\n      :isOpen=\"isOpen\"\n      :showToggle=\"showToggle\"\n      class=\"h-full\"\n      @toggle=\"$emit('toggle')\"\n    >\n      <template #header-utils>\n        <ActiveFileViewToolbar />\n      </template>\n\n      <WidgetList v-if=\"objectId\" :assetId=\"objectId\" />\n\n      <!-- For development only? -->\n      <footer v-if=\"objectId\" class=\"flex gap-2\">\n        <ArrowButton v-if=\"assetUrl\" :to=\"assetUrl\" />\n        <Button\n          :href=\"`${config.base.url}/${assetUrl}`\"\n          icon=\"image\"\n          target=\"_blank\"\n          variant=\"tertiary\"\n        >\n          Old View\n        </Button>\n        <Button\n          :href=\"`${config.base.url}/${assetUrl}/true`\"\n          label=\"Asset Json\"\n          icon=\"data_object\"\n          target=\"_blank\"\n          variant=\"tertiary\"\n        >\n          JSON\n        </Button>\n      </footer>\n    </Drawer>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport Drawer from \"@/components/Drawer/Drawer.vue\";\nimport WidgetList from \"@/components/WidgetList/WidgetList.vue\";\nimport Button from \"@/components/Button/Button.vue\";\nimport { getAssetUrl } from \"@/helpers/displayUtils\";\nimport ActiveFileViewToolbar from \"@/components/ActiveFileViewToolbar/ActiveFileViewToolbar.vue\";\nimport config from \"@/config\";\nimport ArrowButton from \"../ArrowButton/ArrowButton.vue\";\n\nconst props = withDefaults(\n  defineProps<{\n    objectId: string | null;\n    isOpen: boolean;\n    showToggle?: boolean;\n  }>(),\n  {\n    isOpen: false,\n    showToggle: true,\n  }\n);\n\ndefineEmits<{\n  (eventName: \"toggle\");\n}>();\n\nconst assetUrl = computed(() =>\n  props.objectId ? getAssetUrl(props.objectId) : null\n);\n</script>\n\n<style scoped></style>\n","<template>\n  <MediaCard\n    :imgSrc=\"thumbnailImgSrc\"\n    :imgAlt=\"title\"\n    class=\"hover:shadow-lg transition-shadow\"\n  >\n    <div class=\"h-full pb-16 relative\">\n      <Link :to=\"getAssetUrl(searchMatch.objectId)\"\n        ><h1 class=\"font-bold text-xl mb-2 text-neutral-900\">\n          {{ title }}\n        </h1>\n      </Link>\n      <dl v-if=\"props.searchMatch?.entries\" class=\"grid gap-3\">\n        <template\n          v-for=\"(entry, index) in props.searchMatch.entries\"\n          :key=\"index\"\n        >\n          <div>\n            <dt\n              class=\"text-xs text-neutral-400 uppercase col-span-1 flex items-start justify-start hyphens\"\n            >\n              {{ entry?.label || \"Item\" }}\n            </dt>\n            <dd class=\"text-sm col-span-2\">\n              {{ entry.entries?.join(\", \") }}\n            </dd>\n          </div>\n        </template>\n      </dl>\n      <ArrowButton\n        :to=\"getAssetUrl(searchMatch.objectId)\"\n        class=\"absolute bottom-0 right-0\"\n      />\n    </div>\n  </MediaCard>\n</template>\n\n<script lang=\"ts\" setup>\nimport { SearchResultMatch } from \"@/types\";\nimport { getAssetUrl, getThumbURL } from \"@/helpers/displayUtils\";\nimport { computed } from \"vue\";\nimport MediaCard from \"../MediaCard/MediaCard.vue\";\nimport ArrowButton from \"../ArrowButton/ArrowButton.vue\";\nimport Link from \"@/components/Link/Link.vue\";\n\nconst props = defineProps<{\n  searchMatch: SearchResultMatch;\n}>();\n\nconst title = computed(() => {\n  if (Array.isArray(props.searchMatch.title)) {\n    return props.searchMatch.title.join(\",\");\n  }\n\n  if (props.searchMatch.title && props.searchMatch.title.length > 0) {\n    return props.searchMatch.title;\n  }\n\n  return \"(no title)\";\n});\n\nconst thumbnailImgSrc = computed(() => {\n  const { primaryHandlerId } = props.searchMatch;\n  return primaryHandlerId ? getThumbURL(primaryHandlerId) : null;\n});\n</script>\n\n<style scoped>\nimg {\n  max-width: 100%;\n}\n\n.hyphens-auto {\n  hyphens: auto;\n}\n</style>\n","import api from \"./api\";\nimport { ref, Ref, watch } from \"vue\";\nimport { SearchResultMatch } from \"@/types\";\n\nexport function useMoreLikeThis(assetIdRef: Ref<string | null>) {\n  const matches = ref<SearchResultMatch[]>([]);\n\n  watch(\n    assetIdRef,\n    async () => {\n      matches.value = await api.getMoreLikeThis(assetIdRef.value);\n    },\n    { immediate: true }\n  );\n\n  return { matches };\n}\n","<template>\n  <div class=\"asset-details\">\n    <Drawer\n      :label=\"assetTitle\"\n      :isOpen=\"isOpen\"\n      :showToggle=\"showToggle\"\n      class=\"h-full\"\n      @toggle=\"$emit('toggle')\"\n    >\n      <WidgetList v-if=\"assetId\" :assetId=\"assetId\" />\n      <MoreLikeThis :items=\"moreLikeThisItems\" />\n      <footer v-if=\"assetId\" class=\"flex gap-2\">\n        <Button\n          :href=\"`${config.base.url}/${getAssetUrl(assetId)}`\"\n          icon=\"image\"\n          target=\"_blank\"\n          variant=\"tertiary\"\n        >\n          Old View\n        </Button>\n        <Button\n          :href=\"`${config.base.url}/${getAssetUrl(assetId)}/true`\"\n          label=\"Asset Json\"\n          icon=\"data_object\"\n          target=\"_blank\"\n          variant=\"tertiary\"\n        >\n          JSON\n        </Button>\n      </footer>\n    </Drawer>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\";\nimport Drawer from \"@/components/Drawer/Drawer.vue\";\nimport WidgetList from \"@/components/WidgetList/WidgetList.vue\";\nimport { getAssetTitle, getAssetUrl } from \"@/helpers/displayUtils\";\nimport Button from \"@/components/Button/Button.vue\";\nimport { useAsset } from \"@/helpers/useAsset\";\nimport MoreLikeThis from \"../MoreLikeThis/MoreLikeThis.vue\";\nimport { useMoreLikeThis } from \"@/helpers/useMoreLikeThis\";\nimport config from \"@/config\";\n\nconst props = withDefaults(\n  defineProps<{\n    assetId: string | null;\n    isOpen?: boolean;\n    showToggle?: boolean;\n  }>(),\n  {\n    isOpen: true,\n    showToggle: true,\n  }\n);\n\ndefineEmits<{\n  (eventName: \"toggle\");\n}>();\n\nconst assetIdRef = computed(() => props.assetId);\nconst { asset } = useAsset(assetIdRef);\n\nconst { matches: moreLikeThisItems } = useMoreLikeThis(assetIdRef);\n\nconst assetTitle = computed(() =>\n  asset.value ? getAssetTitle(asset.value) : \"\"\n);\n</script>\n<style scoped></style>\n","<template>\n  <div class=\"h-full relative\">\n    <ObjectViewer\n      class=\"h-[75vh] md:h-auto md:absolute md:top-0\"\n      :class=\"{\n        'md:top-0 md:bottom-1/2 md:left-sm md:right-0':\n          isAssetDetailsOpen && isObjectDetailsOpen, // both open\n        'md:top-0 md:bottom-16 md:left-sm md:right-0':\n          isAssetDetailsOpen && !isObjectDetailsOpen, // just asset details\n\n        'md:top-0 md:bottom-16 md:left-0 md:right-sm':\n          !isAssetDetailsOpen && isObjectDetailsOpen, // just object details\n        'md:top-0 md:bottom-16 md:left-0 md:right-0':\n          !isAssetDetailsOpen && !isObjectDetailsOpen, // neither open\n      }\"\n      :fileHandlerId=\"assetStore.activeFileObjectId\"\n    />\n    <AssetDetailsDrawer\n      class=\"md:absolute md:overflow-y-scroll\"\n      :class=\"{\n        'md:bottom-0 md:left-0 md:top-0 md:w-sm': isAssetDetailsOpen, // both open + asset details open\n        'md:bottom-0 md:left-0 md:h-16 md:right-sm':\n          !isAssetDetailsOpen && isObjectDetailsOpen, // just obj panel\n        'md:bottom-0 md:left-0 md:h-16 md:w-1/2':\n          !isAssetDetailsOpen && !isObjectDetailsOpen, //neither open\n      }\"\n      :showToggle=\"permitDrawerToggle\"\n      :assetId=\"assetStore.activeAssetId\"\n      :isOpen=\"permitDrawerToggle ? isAssetDetailsOpen : true\"\n      @toggle=\"isAssetDetailsOpen = !isAssetDetailsOpen\"\n    />\n    <ObjectDetailsDrawer\n      class=\"md:absolute\"\n      :class=\"{\n        'md:bottom-0 md:right-0 md:h-16 md:left-sm':\n          !isObjectDetailsOpen && isAssetDetailsOpen, // just asset open\n        'md:bottom-0 md:right-0 md:h-1/2 md:left-sm':\n          isObjectDetailsOpen && isAssetDetailsOpen, // both panels open\n        'md:bottom-0 md:right-0 md:top-0 md:w-sm':\n          isObjectDetailsOpen && !isAssetDetailsOpen, // just object open\n        'md:bottom-0 md:right-0 md:h-16 md:w-1/2':\n          !isObjectDetailsOpen && !isAssetDetailsOpen, // neither panels open\n      }\"\n      :showToggle=\"permitDrawerToggle\"\n      :moreLikeThisItems=\"moreLikeThisItems\"\n      :objectId=\"assetStore.activeObjectId\"\n      :isOpen=\"permitDrawerToggle ? isObjectDetailsOpen : true\"\n      @toggle=\"isObjectDetailsOpen = !isObjectDetailsOpen\"\n    />\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { ref, computed } from \"vue\";\nimport { useAssetStore } from \"@/stores/assetStore\";\nimport ObjectViewer from \"@/components/ObjectViewer/ObjectViewer.vue\";\nimport ObjectDetailsDrawer from \"@/components/ObjectDetailsDrawer/ObjectDetailsDrawer.vue\";\nimport AssetDetailsDrawer from \"@/components/AssetDetailsDrawer/AssetDetailsDrawer.vue\";\nimport { useMoreLikeThis } from \"@/helpers/useMoreLikeThis\";\nimport { useMediaQuery } from \"@vueuse/core\";\n\nconst props = defineProps<{\n  assetId: string | null;\n  objectId?: string | null;\n}>();\n\nconst isAssetDetailsOpen = ref(true);\nconst isObjectDetailsOpen = ref(false);\nconst assetStore = useAssetStore();\n\nconst assetIdRef = computed(() => props.assetId);\nconst { matches: moreLikeThisItems } = useMoreLikeThis(assetIdRef);\n\nconst permitDrawerToggle = useMediaQuery(\"(min-width: 768px)\");\n</script>\n<style scoped></style>\n"],"file":"assets/AssetView.js"}