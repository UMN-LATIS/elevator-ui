{"version":3,"file":"TextAreaWidget.js","sources":["../../node_modules/shave/dist/shave.es.js","../../src/components/Widget/TextAreaWidget/TextAreaItem.vue"],"sourcesContent":["/**\n  shave - Shave is a javascript plugin that truncates multi-line text within a html element based on set max height\n  @version v5.0.0\n  @link https://github.com/yowainwright/shave#readme\n  @author Jeff Wainwright <yowainwright@gmail.com> (jeffry.in)\n  @license MIT\n**/\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\n\nfunction generateArrayOfNodes(target) {\n    if (typeof target === 'string') {\n        return __spreadArray([], __read(document.querySelectorAll(target)), false);\n    }\n    else if ('length' in target) {\n        return __spreadArray([], __read(target), false);\n    }\n    else {\n        return [target];\n    }\n}\nfunction shave(target, maxHeight, opts) {\n    if (opts === void 0) { opts = {}; }\n    if (typeof maxHeight === 'undefined' || isNaN(maxHeight)) {\n        throw Error('maxHeight is required');\n    }\n    var els = generateArrayOfNodes(target);\n    if (!els.length) {\n        return;\n    }\n    var _a = opts.character, character = _a === void 0 ? '…' : _a, _b = opts.classname, classname = _b === void 0 ? 'js-shave' : _b, _c = opts.spaces, initialSpaces = _c === void 0 ? true : _c, _d = opts.charclassname, charclassname = _d === void 0 ? 'js-shave-char' : _d, _e = opts.link, link = _e === void 0 ? {} : _e;\n    /**\n     * @notes\n     * the initialSpaces + spaces variable definition below fixes\n     * a previous bug where spaces being a boolean type wasn't clear\n     * meaning people were using (a string, in example—which is truthy)\n     * hence, doing it this way is a non-breaking change\n     */\n    var spaces = typeof initialSpaces === 'boolean' ? initialSpaces : true;\n    /**\n     * @notes\n     * - create a span or anchor element and assign properties to it\n     * - JSON.stringify is used to support IE8+\n     * - if link.href is not provided, link object properties are ignored\n     */\n    var isLink = link && JSON.stringify(link) !== '{}' && link.href;\n    var shavedTextElType = isLink ? 'a' : 'span';\n    for (var i = 0; i < els.length; i += 1) {\n        var el = els[i];\n        var styles = el.style;\n        var span = el.querySelector('.' + classname);\n        var textProp = el.textContent === undefined ? 'innerText' : 'textContent';\n        // If element text has already been shaved\n        if (span) {\n            // Remove the ellipsis to recapture the original text\n            el.removeChild(el.querySelector('.' + charclassname));\n            el[textProp] = el[textProp]; // eslint-disable-line\n            // nuke span, recombine text\n        }\n        var fullText = el[textProp];\n        var words = spaces ? fullText.split(' ') : fullText;\n        // If 0 or 1 words, we're done\n        if (words.length < 2) {\n            continue;\n        }\n        // Temporarily remove any CSS height for text height calculation\n        var heightStyle = styles.height;\n        styles.height = 'auto';\n        var maxHeightStyle = styles.maxHeight;\n        styles.maxHeight = 'none';\n        // If already short enough, we're done\n        if (el.offsetHeight <= maxHeight) {\n            styles.height = heightStyle;\n            styles.maxHeight = maxHeightStyle;\n            continue;\n        }\n        var textContent = isLink && link.textContent ? link.textContent : character;\n        var shavedTextEl = document.createElement(shavedTextElType);\n        var shavedTextElAttributes = {\n            className: charclassname,\n            textContent: textContent,\n        };\n        for (var property in shavedTextElAttributes) {\n            shavedTextEl[property] = shavedTextElAttributes[property];\n            shavedTextEl.textContent = character;\n        }\n        if (isLink) {\n            for (var linkProperty in link) {\n                shavedTextEl[linkProperty] = link[linkProperty];\n            }\n        }\n        // Binary search for number of words which can fit in allotted height\n        var max = words.length - 1;\n        var min = 0;\n        var pivot = void 0;\n        while (min < max) {\n            pivot = (min + max + 1) >> 1; // eslint-disable-line no-bitwise\n            el[textProp] = spaces\n                ? words.slice(0, pivot).join(' ')\n                : words.slice(0, pivot);\n            el.insertAdjacentElement('beforeend', shavedTextEl);\n            if (el.offsetHeight > maxHeight) {\n                max = pivot - 1;\n            }\n            else {\n                min = pivot;\n            }\n        }\n        el[textProp] = spaces ? words.slice(0, max).join(' ') : words.slice(0, max);\n        el.insertAdjacentElement('beforeend', shavedTextEl);\n        var diff = spaces\n            ? \" \".concat(words.slice(max).join(' '))\n            : words.slice(max);\n        var shavedText = document.createTextNode(diff);\n        var elWithShavedText = document.createElement('span');\n        elWithShavedText.classList.add(classname);\n        elWithShavedText.style.display = 'none';\n        elWithShavedText.appendChild(shavedText);\n        el.insertAdjacentElement('beforeend', elWithShavedText);\n        styles.height = heightStyle;\n        styles.maxHeight = maxHeightStyle;\n    }\n}\n\nexport { shave as default };\n","<template>\n  <div v-if=\"!show\" ref=\"truncateText\" v-html=\"fieldContents\"></div>\n  <div v-if=\"show\" v-html=\"fieldContents\"></div>\n\n  <button\n    class=\"flex items-center uppercase text-xs text-blue-600\"\n    @click=\"show = !show\"\n  >\n    Show {{ show ? \"Less\" : \"More\" }}\n    <Icon>{{ show ? \"expand_less\" : \"expand_more\" }} </Icon>\n  </button>\n</template>\n<script setup lang=\"ts\">\nimport { WidgetProps } from \"@/types\";\nimport { ref, onMounted } from \"vue\";\nimport { useResizeObserver, useDebounceFn } from \"@vueuse/core\";\nimport shave from \"shave\";\nimport Icon from \"@/components/Icon/Icon.vue\";\n\nconst props = withDefaults(\n  defineProps<{\n    fieldContents: string;\n    widget: WidgetProps;\n    textTruncationLength?: number;\n  }>(),\n  {\n    textTruncationLength: 75,\n  }\n);\nconst show = ref(false);\nconst truncateText = ref<HTMLDivElement | null>(null);\nconst isTruncated = ref(false);\n\nconst debouncedShave = useDebounceFn(() => {\n  updateShave();\n}, 50);\n\nfunction updateShave() {\n  if (!truncateText.value) {\n    return;\n  }\n\n  shave(\n    [truncateText.value] as unknown as NodeList,\n    props.textTruncationLength\n  );\n  isTruncated.value =\n    truncateText.value.querySelector<HTMLElement>(\".js-shave\") !== null;\n}\n\nuseResizeObserver(truncateText, debouncedShave);\nonMounted(() => {\n  updateShave();\n});\n</script>\n"],"names":["__read","o","n","m","i","r","ar","e","error","__spreadArray","to","from","pack","l","generateArrayOfNodes","target","shave","maxHeight","opts","els","_a","character","_b","classname","_c","initialSpaces","_d","charclassname","_e","link","spaces","isLink","shavedTextElType","el","styles","span","textProp","fullText","words","heightStyle","maxHeightStyle","textContent","shavedTextEl","shavedTextElAttributes","property","linkProperty","max","min","pivot","diff","shavedText","elWithShavedText","show","ref","truncateText","isTruncated","debouncedShave","useDebounceFn","updateShave","props","useResizeObserver","onMounted"],"mappings":"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"}