{"version":3,"mappings":"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","names":["template","fieldTitle","_a","widget","getTinyURL","fileObjectId","config","getThumbURL","getAssetUrl","assetId","getWidgetContents","asset","widgetMatchesTitleWidget","titleWidget","getWidgetPropsByFieldTitle","widgetContents","assetHasWidgetContents","contents","getWidgetsForDisplay","filteredWidgets","a","b","getAssetTitle","linkText","widgetProps","cleanedLinkText","__default__","SelectWidget","defineAsyncComponent","CheckBoxWidget","__vitePreload","TextAreaWidget","DateWidget","MultiSelectWidget","LocationWidget","UploadWidget","TagWidget","RelatedAssetWidget","TextWidget","computed","props","widgetMap","getWidgetComponentByType","type","useAsset","assetIdRef","ref","templateRef","api","assetRef","widgets"],"sources":["../../src/helpers/displayUtils.ts","../../src/components/Tuple/Tuple.vue","../../src/components/Widget/Widget.vue","../../src/helpers/useAsset.ts","../../src/components/WidgetList/WidgetList.vue"],"sourcesContent":["import { Asset, WidgetProps, WidgetContent, Template } from \"@/types\";\nimport config from \"@/config\";\n\nexport function getWidgetPropsByFieldTitle<T extends WidgetProps>(\n  template: Template,\n  fieldTitle: string\n): T | null {\n  return (\n    (template.widgetArray as T[]).find(\n      (widget: T) => widget.fieldTitle === fieldTitle\n    ) ?? null\n  );\n}\n\nexport const getTinyURL = (fileObjectId: string): string =>\n  `${config.base.url}/fileManager/tinyImageByFileId/${fileObjectId}/true`;\n\nexport const getThumbURL = (fileObjectId: string): string =>\n  `${config.base.url}/fileManager/previewImageByFileId/${fileObjectId}/true`;\n\nexport const getAssetUrl = (assetId: string): string =>\n  `/asset/viewAsset/${assetId}`;\n\nexport function getWidgetContents<\n  T extends WidgetProps,\n  U extends WidgetContent\n>({ asset, widget }: { asset: Asset; widget: T }) {\n  return asset[widget.fieldTitle] as U[];\n}\n\n/**\n * determines if a widget matches the asset title,\n * so that we can skip rendering it as it will be duplicated\n */\nexport function widgetMatchesTitleWidget({\n  widget,\n  template,\n  asset,\n}: {\n  widget: WidgetProps;\n  template: Template | null;\n  asset: Asset | null;\n}): boolean {\n  // if no titleObject, then this widget doesn't match\n  if (!asset || !template || !asset.titleObject) return false;\n\n  const titleWidget = getWidgetPropsByFieldTitle(template, asset.titleObject);\n  const widgetContents = getWidgetContents({ asset: asset, widget });\n\n  return (\n    !!titleWidget &&\n    widget.type === \"text\" &&\n    widget.fieldTitle === titleWidget.fieldTitle &&\n    widgetContents.length === 1\n  );\n}\n\nexport function assetHasWidgetContents({\n  asset,\n  widget,\n}: {\n  asset: Asset;\n  widget: WidgetProps;\n}) {\n  const contents = getWidgetContents({ asset, widget });\n  return contents !== null && contents !== undefined;\n}\n\nexport function getWidgetsForDisplay({\n  asset,\n  template,\n}: {\n  asset: Asset | null;\n  template: Template | null;\n}): WidgetProps[] {\n  if (!(template && asset)) return [];\n\n  const filteredWidgets = template.widgetArray\n    .filter((widget) => widget.display)\n    .filter((widget) => assetHasWidgetContents({ asset, widget }));\n\n  // if there's less than 2 items, we're done\n  // as there's nothing to be sorted\n  if (filteredWidgets.length < 2) {\n    return filteredWidgets;\n  }\n\n  // otherwise, remove any widgets that might be a duplicate\n  // with the asset title and then sort\n  return filteredWidgets\n    .filter((widget) => !widgetMatchesTitleWidget({ widget, template, asset }))\n    .sort((a, b) => a.viewOrder - b.viewOrder);\n}\n\nexport function getAssetTitle(asset: Asset): string {\n  return asset?.title?.[0] ?? \"(No Title)\";\n}\n\nexport function toClickToSearchUrl(\n  linkText: string,\n  widgetProps: WidgetProps\n): string {\n  const cleanedLinkText = linkText.trim().replace(\"?\", \"\").replace(\"...\", \"\");\n\n  if (widgetProps.clickToSearchType === 0) {\n    return (\n      config.base.url +\n      \"/search/querySearch/\" +\n      encodeURIComponent(cleanedLinkText)\n    );\n  }\n\n  return (\n    config.base.url +\n    \"/search/scopedQuerySearch/\" +\n    widgetProps.fieldTitle +\n    \"/\" +\n    encodeURIComponent(cleanedLinkText)\n  );\n}\n","<template>\n  <div\n    class=\"tuple\"\n    :class=\"{\n      'w-full': variant === 'stacked',\n      'inline-flex items-baseline gap-2': variant === 'inline',\n    }\"\n  >\n    <slot name=\"label\">\n      <span\n        class=\"tuple__label text-xs block uppercase text-neutral-900 leading-none mb-1 tracking-wide\"\n        :class=\"{\n          'font-bold': variant === 'stacked',\n          'sr-only': variant === 'value-only',\n        }\"\n        >{{ label }}</span\n      >\n    </slot>\n    <span class=\"tuple__value block text-neutral-600\" v-bind=\"$attrs\">\n      <slot> - </slot>\n    </span>\n  </div>\n</template>\n<script setup lang=\"ts\">\nwithDefaults(\n  defineProps<{\n    label: string;\n    variant?: \"stacked\" | \"inline\" | \"value-only\";\n  }>(),\n  {\n    variant: \"stacked\",\n  }\n);\n</script>\n<script lang=\"ts\">\nexport default {\n  inheritAttrs: false,\n};\n</script>\n\n<style scoped></style>\n","<template>\n  <Tuple :label=\"widget.label\">\n    <component\n      :is=\"getWidgetComponentByType(widget.type)\"\n      v-if=\"getWidgetComponentByType(widget.type)\"\n      :widget=\"widget\"\n      :contents=\"widgetContents\"\n      :asset=\"asset\"\n    >\n    </component>\n  </Tuple>\n</template>\n<script setup lang=\"ts\">\nimport { type Component, computed, defineAsyncComponent } from \"vue\";\nimport { Asset, WidgetProps, WidgetType } from \"@/types\";\nimport { getWidgetContents } from \"@/helpers/displayUtils\";\nimport Tuple from \"@/components/Tuple/Tuple.vue\";\n\nconst SelectWidget = defineAsyncComponent(\n  () => import(\"@/components/Widget/SelectWidget/SelectWidget.vue\")\n);\nconst CheckBoxWidget = defineAsyncComponent(\n  () => import(\"@/components/Widget/CheckBoxWidget/CheckBoxWidget.vue\")\n);\nconst TextAreaWidget = defineAsyncComponent(\n  () => import(\"@/components/Widget/TextAreaWidget/TextAreaWidget.vue\")\n);\nconst DateWidget = defineAsyncComponent(\n  () => import(\"@/components/Widget/DateWidget/DateWidget.vue\")\n);\nconst MultiSelectWidget = defineAsyncComponent(\n  () => import(\"@/components/Widget/MultiSelectWidget/MultiSelectWidget.vue\")\n);\nconst LocationWidget = defineAsyncComponent(\n  () => import(\"@/components/Widget/LocationWidget/LocationWidget.vue\")\n);\nconst UploadWidget = defineAsyncComponent(\n  () => import(\"@/components/Widget/UploadWidget/UploadWidget.vue\")\n);\nconst TagWidget = defineAsyncComponent(\n  () => import(\"@/components/Widget/TagWidget/TagWidget.vue\")\n);\nconst RelatedAssetWidget = defineAsyncComponent(\n  () => import(\"@/components/Widget/RelatedAssetWidget/RelatedAssetWidget.vue\")\n);\n\n// async components\nconst TextWidget = defineAsyncComponent(\n  () => import(\"@/components/Widget/TextWidget/TextWidget.vue\")\n);\n\nconst props = defineProps<{\n  widget: WidgetProps;\n  asset: Asset;\n}>();\n\nconst widgetContents = computed(() =>\n  getWidgetContents({ asset: props.asset, widget: props.widget })\n);\n\n// map widgetTypeToComponent\nconst widgetMap: Record<WidgetType, Component> = {\n  text: TextWidget,\n  select: SelectWidget,\n  checkbox: CheckBoxWidget,\n  \"text area\": TextAreaWidget,\n  date: DateWidget,\n  multiselect: MultiSelectWidget,\n  location: LocationWidget,\n  upload: UploadWidget,\n  \"tag list\": TagWidget,\n  \"related asset\": RelatedAssetWidget,\n};\n\nfunction getWidgetComponentByType(type: string) {\n  return widgetMap[type] || null;\n}\n</script>\n<style scoped></style>\n","import { Asset, Template } from \"@/types\";\nimport { Ref, ref, watch } from \"vue\";\nimport api from \"./api\";\n\nexport function useAsset(assetIdRef: Ref<string | null>) {\n  const assetRef = ref<Asset | null>(null);\n  const templateRef = ref<Template | null>(null);\n\n  watch(\n    assetIdRef,\n    async () => {\n      const { asset, template } = await api.getAssetWithTemplate(\n        assetIdRef.value\n      );\n      assetRef.value = asset;\n      templateRef.value = template;\n    },\n    { immediate: true }\n  );\n\n  return { asset: assetRef, template: templateRef };\n}\n","<template>\n  <Transition name=\"fade\">\n    <div v-if=\"asset && template\" class=\"widget-list flex flex-col gap-8\">\n      <Widget\n        v-for=\"widget in widgets\"\n        :key=\"widget.widgetId\"\n        :widget=\"widget\"\n        :asset=\"asset\"\n      />\n    </div>\n  </Transition>\n</template>\n<script setup lang=\"ts\">\n/**\n * lists all the asset's widget as defined by the asset\n * template\n */\nimport { computed } from \"vue\";\nimport { getWidgetsForDisplay } from \"@/helpers/displayUtils\";\n\nimport Widget from \"@/components/Widget/Widget.vue\";\nimport { useAsset } from \"@/helpers/useAsset\";\n\nconst props = defineProps<{\n  assetId: string;\n}>();\n\nconst assetIdRef = computed(() => props.assetId);\nconst { asset, template } = useAsset(assetIdRef);\nconst widgets = computed(() =>\n  getWidgetsForDisplay({ asset: asset.value, template: template.value })\n);\n</script>\n<style scoped>\n.fade-enter-active,\n.fade-leave-active {\n  transition: all 0.5s ease;\n}\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>\n"],"file":"assets/WidgetList.js"}