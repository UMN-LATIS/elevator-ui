{"version":3,"file":"RelatedAssetWidget.js","sources":["../../src/components/Widget/RelatedAssetWidget/getTitleFromCacheItem.ts","../../src/components/Widget/RelatedAssetWidget/AccordionRelatedAssetWidgetItem.vue","../../src/components/Widget/RelatedAssetWidget/CollapsedInlineRelatedAssetWidgetItem.vue","../../src/components/Widget/RelatedAssetWidget/ThumbnailRelatedAssetWidgetItem.vue","../../src/components/Widget/RelatedAssetWidget/LinkedRelatedAssetWidgetItem.vue","../../src/components/Widget/RelatedAssetWidget/RelatedAssetWidget.vue"],"sourcesContent":["import { RelatedAssetCacheItem } from \"@/types\";\n\nexport function getTitleFromCacheItem(\n  relatedAssetCacheItem: RelatedAssetCacheItem | null\n): string {\n  return relatedAssetCacheItem?.relatedAssetTitle?.[0] ?? \"(No Title)\";\n}\n","<template>\n  <div class=\"accordion-related-asset-widget-item\">\n    <Accordion :label=\"title\">\n      <template v-if=\"assetCache?.primaryHandler\" #label>\n        <div\n          v-if=\"assetCache?.primaryHandler\"\n          class=\"flex gap-2 items-center w-full flex-1\"\n        >\n          <div class=\"w-[2rem] h-[2rem] overflow-hidden rounded border\">\n            <img\n              :src=\"getTinyURL(assetCache.primaryHandler)\"\n              :alt=\"title\"\n              class=\"object-cover w-full h-full\"\n            />\n          </div>\n          <h3>{{ title }}</h3>\n        </div>\n      </template>\n      <WidgetList :assetId=\"assetId\" />\n      <slot />\n    </Accordion>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport Accordion from \"@/components/Accordion/Accordion.vue\";\nimport WidgetList from \"@/components/WidgetList/WidgetList.vue\";\nimport { RelatedAssetCacheItem } from \"@/types\";\nimport { getTitleFromCacheItem } from \"./getTitleFromCacheItem\";\nimport { getTinyURL } from \"@/helpers/displayUtils\";\n\nconst props = defineProps<{\n  assetId: string;\n  assetCache: RelatedAssetCacheItem | null;\n}>();\n\nconst title = computed(() => getTitleFromCacheItem(props.assetCache));\n</script>\n<style scoped></style>\n","<template>\n  <section\n    v-if=\"asset\"\n    class=\"collapsed-inline-related-asset-widget-item flex flex-col gap-8\"\n  >\n    <h3>{{ title }}</h3>\n    <WidgetList :assetId=\"assetId\" />\n  </section>\n</template>\n<script setup lang=\"ts\">\nimport WidgetList from \"@/components/WidgetList/WidgetList.vue\";\nimport { computed } from \"vue\";\nimport type { RelatedAssetCacheItem } from \"@/types\";\nimport { getTitleFromCacheItem } from \"./getTitleFromCacheItem\";\nimport { useAsset } from \"@/helpers/useAsset\";\n\nconst props = defineProps<{\n  assetId: string;\n  assetCache: RelatedAssetCacheItem | null;\n}>();\n\nconst title = computed(() => getTitleFromCacheItem(props.assetCache));\nconst assetIdRef = computed(() => props.assetId);\nconst { asset } = useAsset(assetIdRef);\n</script>\n<style scoped></style>\n","<template>\n  <RouterLink\n    :title=\"title\"\n    class=\"inline-block mr-2 last:mr-0\"\n    :to=\"`#${assetId}`\"\n  >\n    <ThumbnailImage\n      v-if=\"assetCache.primaryHandler\"\n      :src=\"getTinyURL(assetCache.primaryHandler)\"\n      :alt=\"title\"\n      :isActive=\"isActiveObject\"\n      iconOnHover=\"arrow_forward\"\n    />\n    <div v-else>\n      <Icon>image</Icon>\n      <p>{{ title }}</p>\n    </div>\n  </RouterLink>\n</template>\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport { getTinyURL } from \"@/helpers/displayUtils\";\nimport type { RelatedAssetCacheItem } from \"@/types\";\nimport { useAssetStore } from \"@/stores/assetStore\";\nimport { getTitleFromCacheItem } from \"./getTitleFromCacheItem\";\nimport ThumbnailImage from \"@/components/ThumbnailImage/ThumbnailImage.vue\";\nimport Icon from \"@/components/Icon/Icon.vue\";\n\nconst props = defineProps<{\n  assetId: string;\n  assetCache: RelatedAssetCacheItem;\n}>();\n\nconst assetStore = useAssetStore();\n\nconst title = computed((): string => getTitleFromCacheItem(props.assetCache));\n\nconst isActiveObject = computed(\n  (): boolean => assetStore.activeObjectId === props.assetId\n);\n</script>\n<style scoped></style>\n","<template>\n  <div class=\"linked-related-asset-widget-item\">\n    <Link :to=\"assetUrl\">{{ title }}</Link>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport type { RelatedAssetCacheItem } from \"@/types\";\nimport { getTitleFromCacheItem } from \"./getTitleFromCacheItem\";\nimport { getAssetUrl } from \"@/helpers/displayUtils\";\nimport Link from \"@/components/Link/Link.vue\";\n\nconst props = defineProps<{\n  assetId: string;\n  assetCache: RelatedAssetCacheItem | null;\n}>();\n\nconst title = computed((): string => getTitleFromCacheItem(props.assetCache));\nconst assetUrl = computed((): string => getAssetUrl(props.assetId));\n</script>\n<style scoped></style>\n","<template>\n  <div class=\"related-asset-widget\">\n    <component\n      :is=\"widgetType\"\n      v-for=\"relatedAsset in contentsWithAssetId\"\n      :key=\"relatedAsset.targetAssetId\"\n      :assetId=\"relatedAsset.targetAssetId\"\n      :assetCache=\"asset.relatedAssetCache?.[relatedAsset.targetAssetId]\"\n      :label=\"relatedAsset.label ?? ''\"\n    >\n      <div class=\"flex justify-end items-center gap-2\">\n        <ArrowButton :to=\"`/asset/viewAsset/${relatedAsset.targetAssetId}`\" />\n      </div>\n    </component>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { type Component, computed } from \"vue\";\nimport {\n  Asset,\n  RelatedAssetWidgetProps,\n  RelatedAssetWidgetContent,\n} from \"@/types\";\nimport AccordionRelatedAssetWidgetItem from \"./AccordionRelatedAssetWidgetItem.vue\";\nimport CollapsedInlineRelatedAssetWidgetItem from \"./CollapsedInlineRelatedAssetWidgetItem.vue\";\nimport ThumbnailRelatedAssetWidgetItem from \"./ThumbnailRelatedAssetWidgetItem.vue\";\nimport LinkedRelatedAssetWidgetItem from \"./LinkedRelatedAssetWidgetItem.vue\";\nimport ArrowButton from \"@/components/ArrowButton/ArrowButton.vue\";\n\nconst props = defineProps<{\n  widget: RelatedAssetWidgetProps;\n  contents: RelatedAssetWidgetContent[];\n  asset: Asset;\n}>();\n\ntype WithTargetAssetId<T> = T & { targetAssetId: string };\n\nconst widgetType = computed((): Component => {\n  if (props.widget.fieldData.collapseNestedChildren) {\n    return CollapsedInlineRelatedAssetWidgetItem;\n  }\n\n  if (props.widget.fieldData.thumbnailView) {\n    return ThumbnailRelatedAssetWidgetItem;\n  }\n\n  if (!props.widget.fieldData.nestData) {\n    return LinkedRelatedAssetWidgetItem;\n  }\n\n  return AccordionRelatedAssetWidgetItem;\n});\n\nconst contentsWithAssetId = computed(() =>\n  props.contents.filter(\n    (item): item is WithTargetAssetId<RelatedAssetWidgetContent> =>\n      !!item.targetAssetId\n  )\n);\n</script>\n<style scoped></style>\n"],"names":["getTitleFromCacheItem","relatedAssetCacheItem","_b","_a","title","computed","props","assetIdRef","asset","useAsset","assetStore","useAssetStore","isActiveObject","assetUrl","getAssetUrl","widgetType","CollapsedInlineRelatedAssetWidgetItem","ThumbnailRelatedAssetWidgetItem","AccordionRelatedAssetWidgetItem","LinkedRelatedAssetWidgetItem","contentsWithAssetId","item"],"mappings":"igBAEO,SAASA,EACdC,EACQ,SACD,OAAAC,GAAAC,EAAAF,GAAA,YAAAA,EAAuB,oBAAvB,YAAAE,EAA2C,KAA3C,KAAAD,EAAiD,YAC1D,kSC8BME,EAAQC,EAAS,IAAML,EAAsBM,EAAM,UAAU,CAAC,8pBCf9DF,EAAQC,EAAS,IAAML,EAAsBM,EAAM,UAAU,CAAC,EAC9DC,EAAaF,EAAS,IAAMC,EAAM,OAAO,EACzC,CAAE,MAAAE,CAAA,EAAUC,EAASF,CAAU,uPCU/BG,EAAaC,IAEbP,EAAQC,EAAS,IAAcL,EAAsBM,EAAM,UAAU,CAAC,EAEtEM,EAAiBP,EACrB,IAAeK,EAAW,iBAAmBJ,EAAM,OAAA,4iBCrB/CF,EAAQC,EAAS,IAAcL,EAAsBM,EAAM,UAAU,CAAC,EACtEO,EAAWR,EAAS,IAAcS,EAAYR,EAAM,OAAO,CAAC,oRCmB5DS,EAAaV,EAAS,IACtBC,EAAM,OAAO,UAAU,uBAClBU,EAGLV,EAAM,OAAO,UAAU,cAClBW,EAGJX,EAAM,OAAO,UAAU,SAIrBY,EAHEC,CAIV,EAEKC,EAAsBf,EAAS,IACnCC,EAAM,SAAS,OACZe,GACC,CAAC,CAACA,EAAK,aACX,CAAA"}